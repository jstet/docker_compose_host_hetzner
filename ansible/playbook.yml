---
- hosts: all
  gather_facts: true
  become: false
  vars_files:
    - group_vars/main.yml
    - group_vars/vault.yml

  tasks:
    - block:
      - name: Configure server to be CIS compliant
        include_role:
          name: ansible-lockdown.ubuntu20-cis
        vars:
          ubtu20cis_section1_patch: false
          ubtu20cis_section2_patch: false
          ubtu20cis_section3_patch: false
          ubtu20cis_section4_patch: false
          ubtu20cis_section5_patch: true
          ubtu20cis_section6_patch: true
          ubtu20cis_ipv6_required: true
          ubtu20cis_rule_1_1_1_2: false
          ubtu22cis_rule_5_3_1: false
          ubtu20cis_rule_5_3_2: false
          ubtu20cis_rule_5_3_3: false
          ubtu20cis_rule_5_3_4: false
          ubtu20cis_rule_5_3_5: false
          ubtu20cis_rule_5_3_6: false
          # Control 5.3.16
          ubtu20cis_sshd:
            log_level: "INFO"
            max_auth_tries: 4
            client_alive_interval: 299
            client_alive_count_max: 2
            ciphers: "chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr"
            macs: "hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512,hmac-sha2-256"
            kex_algorithms: "curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group14-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256"
            # Control 5.3.17
            login_grace_time: 59
            # Control 5.3.22
            max_sessions: 2
            allow_users: "{{ ansible_user }}"
      become: true

    - name: Unconditionally reboot the machine with all defaults
      ansible.builtin.reboot:
      become: true

    - name: Create dir for docker compose
      file:
        path: "/home/{{  ansible_user   }}/caddy"
        state: directory
        owner: "{{  ansible_user   }}"
        mode: 0775

    - name: copy caddy docker compose to server
      copy:
        src: files/docker-compose.yml
        dest: "/home/{{  ansible_user   }}/caddy/docker-compose.yml"

    - name: creating network
      shell: |
        docker network inspect caddy >/dev/null 2>&1 || \
        docker network create caddy

    - name: deploying caddy
      shell: |
        cd caddy && docker compose up -d
#     ------ Example: ----
#     - name: Git checkout
#       ansible.builtin.git:
#         repo: 'https://github.com/jstet/myrtle.git'
#         dest: /home/{{  ansible_user   }}/myrtle
#
#
#     - name: Template docker compose to server
#       template:
#         src: "templates/docker-compose.yml"
#         dest: "/home/{{  ansible_user   }}/myrtle/docker-compose.yml"
#
#     - name: deploying app
#       shell: |
#         cd /home/{{  ansible_user   }}/myrtle && docker compose up -d


